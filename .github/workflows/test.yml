name: Test

on:
    push:
        branches: [master]
        paths-ignore:
            - '**.md'
    pull_request:
        branches: [master]
        paths-ignore:
            - '**.md'

jobs:
    lint:
        name: lint
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: '3.9'

            - name: Install dependencies
              run: pip install black==22.1.0 isort==5.10.1 flake8==4.0.1

            - name: Ensure code has been formatted with black
              run: black mugen scripts tests --check

            - name: Ensure imports have been sorted with isort
              run: isort . --check-only

            - name: Run linter
              run: flake8
    test:
        needs: lint
        name: ${{ matrix.operating-system }}
        runs-on: ${{ matrix.operating-system }}-latest
        strategy:
            fail-fast: false
            matrix:
                operating-system: ['ubuntu', 'macos', 'windows']
        defaults:
            run:
                # Ensure conda environment is activated for each step
                shell: bash -l {0}
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Set up Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  miniconda-version: ${{ env.ACT && 'latest' || '' }}
                  auto-activate-base: false
                  environment-file: environment.yml
                  activate-environment: mugen

            - name: Install dependencies
              run: pip install .[tests]

            - name: Run tests
              run: pytest --cov mugen --cov-report xml

            - name: Upload test coverage to Codecov
              uses: codecov/codecov-action@v2
              if: ${{ !env.ACT }}
              with:
                  files: coverage.xml
                  fail_ci_if_error: true
                  token: ${{ secrets.CODECOV_TOKEN }}
